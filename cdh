# Author: louisadunne@gmail.com
# Sun Mar 10 16:50:24 GMT 2013
#
# A few commands for keeping track of cd history
#
# Source this file:
#     . cdh
#
# Functions:
#   cd-cd()         cd with history
#   cd-history()    show cd history (-n no line numbers)
#   cd-clear()      clear cd history
#   cd-load()       load ~/.cdh overwring current history
#   cd-save()       save to ~/.cdh (Merge by default, -o to overwrite)
#
# Aliases:
#   cd              cd-cd()
#   cdh [-n]        cd-history()
#   cdrm            cd-rm()
#   cdl             cd-load(); cd-history()
#   cds [-o]        cd-save()

# TODO
# 1. Add named directories and a command to add a dir without moving to it
#    (can be used in the load file too).

cd-check-index()
{
    if [ $1 -lt 0 -o $1 -ge ${#CDHISTORY[@]} ]; then
        echo "$1 out of range"
        return 1
    else
        return 0
    fi
}

cd-cd()
{
    local arg i

    # parse out any cd options
    options=()
    while [ $# -gt 0 ]; do
        case $1 in
            -[-a-zA-Z]*)
                options+=($1)
                shift
                ;;
            *)
                arg="$*"
                break
                ;;
        esac
    done

    # Look in history for numeric args
    if [[ $arg =~ ^[0-9]+ ]] && [ ! -d $arg ]; then
        cd-check-index $arg || return 1
        \cd ${CDHISTORY[$arg]}
        return $?
    fi

    \cd ${options[@]} "$arg" || return 1

    # Don't add $HOME
    [ "$PWD" == "$HOME" ] && return 0

    # Don't add the dir if it's already in the list
    for ((i = 0; i < ${#CDHISTORY[@]}; i++)); do
        [ "$PWD" == "${CDHISTORY[$i]}" ] && return 0
    done

    CDHISTORY+=($PWD)
    return 0
}

cd-lock()
{
    exec 200>|/var/lock/cdh || return $?

    flock -x -w 5 200
    if [ $? -ne 0 ]; then
        echo "Failed to get a lock on the lockfile after 5 seconds."
        return 1
    fi
    return 0
}

cd-unlock()
{
    local rc=0

    flock -o 200
    if [ $? -ne 0 ]; then
        echo "Failed to unlock the lockfile."
        rc=1
    fi

    exec 200>&-
    if [ $? -ne 0 ]; then
        echo "Failed to close the lockfile descriptor (200)"
        rc=1
    fi
    return $rc
}

cd-save()
{
    local stored

    cd-lock || return $?

    # Grab the contents of .cdh before we overwrite it
    stored=($(test -f ~/.cdh && cat ~/.cdh))

    # The default is to merge the cd history with existing ~.cdh
    # -o overwrites ~/.cdh with the current history
    (
        cd-history -n
        # -o means overwrite (dont merge)
        if [ "$1" != "-o" ]; then
            for s in ${stored[@]}; do
                echo $s
            done
        fi
    ) | sort | uniq >| ~/.cdh

    cd-unlock || return $?
    cd-load
    cd-history
    return 0
}

cd-load()
{
    cd-lock || return $?
    CDHISTORY=($(test -f ~/.cdh && cat ~/.cdh))
    cd-unlock || return $?
    return 0
}

# --- EXPERIMENTAL ---
cd-history()
{
    local i none

    if [ "$1" == "-n" ]; then
        none=1
        shift
    else
        none=0
    fi

    if [ "$CDHISTORY" == "" ]; then
        [ $none -eq 0 ] && echo "<empty>"
        return 0
    fi

    if [ "$1" == "" ]; then
        # show all
        (
        for ((i = 0; i < ${#CDHISTORY[@]}; i++)); do
            if [ $none -eq 0 ]; then
                # flips between 37 and 34 (white/blue)
                n=$(echo "37 - (3 * ($i % 2))" | bc)
                echo -e "\e[1;${n}m${i} ${CDHISTORY[$i]}\e[0m"
            else
                echo -e "${CDHISTORY[$i]} "
            fi
        done
        ) | column -t
    else
        cd-check-index $1 || return 1
        echo ${CDHISTORY[$1]}
    fi
    return 0
}

cd-rm()
{
    local tmp i

    if [ "$CDHISTORY" == "" ]; then
        return 0
    fi

    if [ "$1" == "" ]; then
        # clear all cd history
        CDHISTORY=()
    else
        # clear entry $1
        cd-check-index $1 || return 1
        # unset leaves gaps so copy each element excluding $1
        tmp=()
        for ((i = 0; i < ${#CDHISTORY[@]}; i++)); do
            if [ $i -ne $1 ]; then
                tmp+=(${CDHISTORY[$i]})
            fi
        done
        CDHISTORY=("${tmp[@]}")
    fi

    cd-history
    return 0
}

cd-search()
{
    cd-history -n

    prompt="(reverse-cd-search)"
    IFS=
    read -s -p "${prompt}: \"\" " -n 1 c || return $?
    [ "$c" == "" ] && return 0
    str=""
    pat=""

    while true; do
        if [ "$c" == "" ]; then
            if [ ${#str} -ne 0 ]; then
                str=${str:0:${#str}-1}
                pat=${pat:0:${#pat}-3}
            fi
        elif [ "$c" == "" ]; then
            str=""
            pat=""
        elif [ "$c" != "" ]; then
            str+=$c
            pat+=".*$c"
        fi

        #(
            #cd-history -n
        #) | grep "$pat" 
        res=($(cd-history -n))
        for r in "${res[@]}"; do
            echo $r | grep "$pat"
        done


        read -s -p "${prompt} \"${str}\" " -n 1 c || return $?
        echo ""
        [ "$c" == "" ] && return 0
    done
}


if [ "$CDHISTORY" == "" ]; then
    cd-load
fi

alias   cd=cd-cd
alias   cdh=cd-history
alias   cdrm=cd-rm
alias   cdl="cd-load; cd-history"
alias   cds=cd-save

trap cds EXIT
